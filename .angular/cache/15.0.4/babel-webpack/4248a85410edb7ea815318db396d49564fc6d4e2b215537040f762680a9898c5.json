{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { CounterService } from './counter.service';\nimport { UserService } from './user/user.service';\nvar AppComponent = /** @class */function () {\n  function AppComponent(userService, counterService) {\n    this.userService = userService;\n    this.counterService = counterService;\n    this.metrics = [];\n    this.users = [];\n  }\n  AppComponent.prototype.ngOnInit = function () {\n    this.users = this.userService.users;\n    //this.getMetrics();\n    this.metrics = this.counterService.metrics;\n  };\n  AppComponent.prototype.onSetToInactive = function (id) {\n    this.userService.disableUser(id);\n  };\n  AppComponent.prototype.onSetToActive = function (id) {\n    this.userService.enableUser(id);\n  };\n  AppComponent = __decorate([Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: []\n  }), __metadata(\"design:paramtypes\", [UserService, CounterService])], AppComponent);\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}