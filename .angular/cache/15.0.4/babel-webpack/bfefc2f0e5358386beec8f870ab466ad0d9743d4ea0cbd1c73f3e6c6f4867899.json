{"ast":null,"code":"import { CounterService } from './shared/counter.service';\nimport { UserService } from './user/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user/user.service\";\nimport * as i2 from \"./shared/counter.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./active-users/active-users.component\";\nimport * as i5 from \"./inactive-users/inactive-users.component\";\nfunction AppComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var metric_r1 = ctx.$implicit;\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"metrics\", ctx_r0.metrics);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"Actions \", metric_r1.name, \": \", metric_r1.value, \"\");\n  }\n}\nvar AppComponent = /** @class */function () {\n  function AppComponent(userService, counterService) {\n    this.userService = userService;\n    this.counterService = counterService;\n    this.metrics = [];\n    this.users = [];\n  }\n  AppComponent.prototype.ngOnInit = function () {\n    this.users = this.userService.users;\n    this.metrics = this.counterService.metrics;\n  };\n  AppComponent.prototype.onSetToInactive = function (id) {\n    this.userService.disableUser(id);\n  };\n  AppComponent.prototype.onSetToActive = function (id) {\n    this.userService.enableUser(id);\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CounterService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    features: [i0.ɵɵProvidersFeature([])],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-8\", \"col-md-offset-2\"], [3, \"users\", \"userSetToInactive\"], [3, \"users\", \"userSetToActive\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"metrics\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"metrics\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"app-active-users\", 3);\n        i0.ɵɵlistener(\"userSetToInactive\", function AppComponent_Template_app_active_users_userSetToInactive_3_listener($event) {\n          return ctx.onSetToInactive($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"app-inactive-users\", 4);\n        i0.ɵɵlistener(\"userSetToActive\", function AppComponent_Template_app_inactive_users_userSetToActive_4_listener($event) {\n          return ctx.onSetToActive($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6, \"Metrics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ul\", 5);\n        i0.ɵɵtemplate(8, AppComponent_li_8_Template, 2, 3, \"li\", 6);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"users\", ctx.users);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"users\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.metrics);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ActiveUsersComponent, i5.InactiveUsersComponent],\n    styles: [\".container[_ngcontent-%COMP%]{margin-top:30px}\"]\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}